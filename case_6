#Packages
import pandas as pd
from matplotlib import pyplot as plt
import numpy as np
from statsmodels.regression.linear_model import OLS

# Bokeh pakker
from bokeh.plotting import figure
from bokeh.io import show, output_notebook
from bokeh.plotting import output_file
# Disable chained assignments
pd.options.mode.chained_assignment = None


df = pd.read_csv('https://raw.githubusercontent.com/Merkura/git-test/master/natural-resources.csv?token=GHSAT0AAAAAABS6PFNSMCDTYQFMAJGEKNF4YSZM3FQ',
index_col=0)
df


df_filtered = df[df['Entity'].isin(["Norway", "Sweden", "Denmark",
"United state", "United kingdom", "Island", 'Finland', 'Canada'])]
df_filtered


df_filtered_2019 = df_filtered[df_filtered["Year"] == 2019]
df_filtered_2019


# Creating a dictionary of continents with norwegian translation:
continents={'Norway':'Norge', 'Sweden':'Sverige', 'Denmark':'Danmark',
'United kingdom':'UK', 'United state':'USA', 'Island':'Island',
'Finland':'Finland', 'Canada' : 'canada'}

# Assigning a color hex-code to each continent
colors={'Norway': '#E14827', 'Sweden': '#84E127', 'Island':
'#2792E1', 'United state': '#E04A6C', 'United kingdom' : '#DEB887', 'Denmark':
'darkgreen', 'Finland' :'purple', 'Canada': '#5F9EA0'}

df_filtered_2019 ['Entity_no'] = df_filtered_2019['Entity'].apply(lambda cont:  continents[cont])
df_filtered_2019['colors'] = df_filtered_2019['Entity'].apply(lambda cont: colors[cont])
df_filtered_2019




df_filtered_2019['size'] = df_filtered_2019['Population'].apply(lambda pop: pop**0.5/300)
df_filtered_2019




df_filtered_2019['Oil_production_rnd'] = df_filtered_2019['Oil production'].apply(lambda l: int(l))
df_filtered_2019['Oil_reserves_per_capita_rnd'] = df_filtered_2019['Oil reserves per capita'].apply(lambda l: int(l))
df_filtered_2019['pop_mill_str'] = df_filtered_2019['Population'].apply(lambda pop:'{:,}'.format(int(pop/1000000)))
df_filtered_2019



# Creating figure:
p = figure(
        title = "naturlige ressurser",
        x_axis_label = 'Coal exports',
        y_axis_label = 'Coal imports',

        x_axis_type = "log",
        y_axis_type = "log",

        tools="hover",
        tooltips = [
            ("Land", "@Entity_no"),
            ("coal export", "@Coal exports"),
            ("Befolkning", "@pop_mill_str"),
            ("coal", "@Coal imports ")
            ],

        plot_height = 580,
        plot_width = 980)
        
        
        
        p.scatter(
    source=df_filtered_2019,
    x= 'coal exports',
    y= 'coal imports',

    size='size',
    color= 'colors',
    legend_field='Entity_no',
    alpha= 0.8
    )

# Formatting:
p.xaxis.major_label_overrides = { 1000: '1k', 10000: '10k', 100000: '100k' }
p.legend.location = "top_left"

p.legend[0].border_line_alpha=0
p.outline_line_alpha=0
p.grid[0].grid_line_alpha=0
p.grid[1].grid_line_alpha=0


# Creating the graph and saving as html
output_notebook()
output_file("natural-resources.html")
show(p)
